package processm.core.helpers

private val charToSuperscript = mapOf(
    '0' to "\u2070",
    '1' to "\u00B9",
    '2' to "\u00B2",
    '3' to "\u00B3",
    '4' to "\u2074",
    '5' to "\u2075",
    '6' to "\u2076",
    '7' to "\u2077",
    '8' to "\u2078",
    '9' to "\u2079",
    'a' to "\u1d43",
    'b' to "\u1d47",
    'c' to "\u1d9c",
    'd' to "\u1d48",
    'e' to "\u1d49",
    'f' to "\u1da0",
    'g' to "\u1d4d",
    'h' to "\u02b0",
    'i' to "\u2071",
    'j' to "\u02b2",
    'k' to "\u1d4f",
    'l' to "\u02e1",
    'm' to "\u1d50",
    'n' to "\u207f",
    'o' to "\u1d52",
    'p' to "\u1d56",
    'q' to Character.toString(0x107A5),
    'r' to "\u02b3",
    's' to "\u02e2",
    't' to "\u1d57",
    'u' to "\u1d58",
    'v' to "\u1d5b",
    'w' to "\u02b7",
    'x' to "\u02e3",
    'y' to "\u02b8",
    'z' to "\u1DBB",
    'A' to "\u1d2c",
    'B' to "\u1d2e",
    'C' to "\u1D9C",
    'D' to "\u1d30",
    'E' to "\u1d31",
    'F' to "\u1DA0", // should be \uA7F3 but most fonts do not support it, instead we use lowercase superscript ᶠ
    'G' to "\u1d33",
    'H' to "\u1d34",
    'I' to "\u1d35",
    'J' to "\u1d36",
    'K' to "\u1d37",
    'L' to "\u1d38",
    'M' to "\u1d39",
    'N' to "\u1d3a",
    'O' to "\u1d3c",
    'P' to "\u1d3e",
    //'Q' to "Q", // should be \uA7F4 but most fonts do not support it, instead we use ordinary Q
    'R' to "\u1d3f",
    'S' to "\u02E2",
    'T' to "\u1d40",
    'U' to "\u1d41",
    'V' to "\u2c7d",
    'W' to "\u1d42",
    'X' to "\u02E3",
    //'Y' to "Y",
    'Z' to "\u1DBB",
    '+' to "\u207A",
    '-' to "\u207B",
    '=' to "\u207C",
    '(' to "\u207D",
    ')' to "\u207E",
    'α' to "\u1d45",
    'ɑ' to "\u1d45",
    'β' to "\u1d5d",
    'ꞵ' to "\u1d5d",
    'ɣ' to "\u1d5e",
    'Ɣ' to "\u1d5e",
    'δ' to "\u1d5f",
    'ẟ' to "\u1d5f",
    'ε' to "\u1d4b",
    'θ' to "\u1dbf",
    'ι' to "\u1da5",
    'ɩ' to "\u1da5",
    'φ' to "\u1db2",
    'ɸ' to "\u1db2",
    'ψ' to "\u1d60",
    'ѱ' to "\u1d60",
    'ⲯ' to "\u1d60",
    'χ' to "\u1d61",
    'ꭓ' to "\u1d61",
    'τ' to "\u1D40",
    'ⲧ' to "\u1D40"
)

private val charToSubscript = mapOf(
    '0' to "\u2080",
    '1' to "\u2081",
    '2' to "\u2082",
    '3' to "\u2083",
    '4' to "\u2084",
    '5' to "\u2085",
    '6' to "\u2086",
    '7' to "\u2087",
    '8' to "\u2088",
    '9' to "\u2089",
    'a' to "\u2090",
    'b' to "\uA67A",
//    'c' to "\u2DED",
    'd' to "\uD81B\uDF74",
    'e' to "\u2091",
//    'f' to "?",
//    'g' to "?",
    'h' to "\u2095",
    'i' to "\u1d62",
    'j' to "\u2c7c",
    'k' to "\u2096",
    'l' to "\u2097",
    'm' to "\u2098",
    'n' to "\u2099",
    'o' to "\u2092",
    'p' to "\u209a",
//    'q' to "?",
    'r' to "\u1d63",
    's' to "\u209b",
    't' to "\u209c",
    'u' to "\u1d64",
    'v' to "\u1d65",
//    'w' to "?",
    'x' to "\u2093",
//    'y' to "?",
//    'z' to "?",
    'A' to "ᴀ",
    'B' to "ʙ",
    'C' to "ᴄ",
    'D' to "ᴅ",
    'E' to "ᴇ",
    'F' to "ꜰ",
    'G' to "ɢ",
    'H' to "ʜ",
    'I' to "ɪ",
    'J' to "ᴊ",
    'K' to "ᴋ",
    'L' to "ʟ",
    'M' to "ᴍ",
    'N' to "ɴ",
    'O' to "ᴏ",
    'P' to "ᴘ",
    'Q' to "ꞯ",
    'R' to "ʀ",
    'S' to "ꜱ",
    'T' to "ᴛ",
    'U' to "ᴜ",
    'V' to "ᴠ",
    'W' to "ᴡ",
    'X' to "x",
    'Y' to "ʏ",
    'Z' to "ᴢ",
    '+' to "\u208A",
    '-' to "\u208B",
    '=' to "\u208C",
    '(' to "\u208D",
    ')' to "\u208E",
//    'α' to "?",
//    'ɑ' to "?",
    'β' to "\u1d66",
    'ꞵ' to "\u1d66",
    'ɣ' to "\u1d67",
    'Ɣ' to "\u1d67",
//    'δ' to "?",
//    'ẟ' to "?",
//    'ε' to "?",
//    'θ' to "?",
//    'ι' to "?",
//    'ɩ' to "?",
    'ρ' to "\u1d68",
//    'φ' to "?",
//    'ɸ' to "?",
    'ψ' to "\u1d69",
    'ѱ' to "\u1d69",
    'ⲯ' to "\u1d69",
    'χ' to "\u1d6a",
    'ꭓ' to "\u1d6a",
//    'τ' to "\u209C",
//    'ⲧ' to "\u209C"
)

/**
 * Replaces the characters in this string with the superscript counterparts, i.e., the corresponding characters
 * painted above the baseline. The characters without the superscript counterparts are left intact.
 * See e.g., https://en.wikipedia.org/wiki/Unicode_subscripts_and_superscripts
 */
fun CharSequence.toSuperscript(): String = buildString {
    for (char in this@toSuperscript)
        append(charToSuperscript[char] ?: char)
}

/**
 * Replaces the characters in this string with the subscript counterparts, i.e., the corresponding characters
 * painted below the baseline. The characters without the subscript counterparts are left intact.
 * See e.g., https://en.wikipedia.org/wiki/Unicode_subscripts_and_superscripts
 * https://en.wikipedia.org/wiki/Small_caps#Unicode
 */
fun CharSequence.toSubscript(): String = buildString {
    for (char in this@toSubscript)
        append(charToSubscript[char] ?: char)
}
